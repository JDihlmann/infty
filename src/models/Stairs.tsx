/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
	nodes: {
		Cube331: THREE.Mesh
		Cube331_1: THREE.Mesh
		Cube331_2: THREE.Mesh
	}
	materials: {
		["Material.433"]: THREE.MeshStandardMaterial
		["Material.434"]: THREE.MeshStandardMaterial
		["Material.432"]: THREE.MeshStandardMaterial
	}
}

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
	const group = useRef<THREE.Group>()
	const { nodes, materials } = useGLTF("/Stairs.glb") as GLTFResult
	return (
		<group ref={group} {...props} dispose={null}>
			<group scale={[1, 1, 0.13]}>
				<mesh geometry={nodes.Cube331.geometry} material={materials["Material.433"]} />
				<mesh geometry={nodes.Cube331_1.geometry} material={materials["Material.434"]} />
				<mesh geometry={nodes.Cube331_2.geometry} material={materials["Material.432"]} />
			</group>
		</group>
	)
}

useGLTF.preload("/Stairs.glb")
